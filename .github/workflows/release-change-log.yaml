name: Release Changelog to Discord

on:
  release:
    types: [published]

jobs:
  notify-discord:
    if: github.event.release.target_commitish == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Format and send changelog to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo '${{ toJson(github.event.release) }}' > payload_raw.json

          BODY=$(jq -r '.body' payload_raw.json | tr -d '\r')
          TAG_NAME=$(jq -r '.tag_name' payload_raw.json)
          NAME=$(jq -r '.name' payload_raw.json)
          URL=$(jq -r '.html_url' payload_raw.json)

          echo "---- NORMALIZED BODY ----"
          echo "$BODY"

          WHATS_CHANGED=$(awk '
            BEGIN { flag=0 }
            /^## [Ww]hat.?s [Cc]hanged/ { flag=1; next }
            /^## / && flag { exit }
            flag { print }
          ' <<< "$BODY")

          WHATS_CHANGED="${WHATS_CHANGED:-No changes listed.}"
          FULL_CHANGELOG_URL=$(grep -o 'https://github.com[^ ]*commits[^ ]*' <<< "$BODY" || echo "$URL")

          # Write DESCRIPTION into temp file safely (preserve literal newlines)
          {
            echo "📝 **What's Changed:**"
            echo "$WHATS_CHANGED"
            echo ""
            echo "📦 [Full Changelog]($FULL_CHANGELOG_URL)"
          } > description.txt

          jq -n \
            --arg title "🚀 New Release: $NAME" \
            --arg url "$URL" \
            --slurpfile description description.txt \
            --argjson color 3447003 \
            '{
              embeds: [{
                title: $title,
                url: $url,
                description: $description[0],
                color: $color
              }]
            }' > payload.json

          echo "---- FINAL DISCORD PAYLOAD ----"
          cat payload.json

          curl -H "Content-Type: application/json" \
               -X POST -d @payload.json "$DISCORD_WEBHOOK"
